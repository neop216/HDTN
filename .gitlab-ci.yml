# Configure the pipeline stages
stages:
  - build-stage
  - test-stage

# Set global environment variables
variables:
  HDTN_SOURCE_ROOT: "$PWD"

# Set the pipleline to run for merge request events only
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

# Build HDTN with the default configuration
# Use this for unit and integrated tests
build-default:
  stage: build-stage
  tags:
  - docker
  - linux-x86
  image: $CI_REGISTRY/hdtn-v4/hdtn/debian-base
  script:
    - mkdir -p build
    - cmake -S . -B build
    - make -C build/ -j8
  cache:
    key: build-default-$CI_MERGE_REQUEST_TARGET_BRANCH_NAME-$CI_MERGE_REQUEST_ID
    paths:
      - build
  artifacts:
    paths:
      - build

# Build HDTN with C++11 only
build-cpp11:
  stage: build-stage
  tags:
    - docker
    - linux-x86
  image: $CI_REGISTRY/hdtn-v4/hdtn/debian-base
  script:
    - mkdir -p build
    - cmake -S . -B build -DHDTN_TRY_USE_CPP17:BOOL=OFF
    - make -C build/ -j8
  cache:
    key: build-cpp11-$CI_MERGE_REQUEST_TARGET_BRANCH_NAME-$CI_MERGE_REQUEST_ID
    paths:
      - build

# Build HDTN with extra compile options
build-extra-options:
  stage: build-stage
  tags:
  - docker
  - linux-x86
  image: $CI_REGISTRY/hdtn-v4/hdtn/debian-base
  script:
    - mkdir -p external
    - cp -r /home/civetweb/include external/include
    - mkdir -p external/lib
    - cp /home/civetweb/libcivetweb.a external/lib
    - mkdir -p build
    - cmake -S . -B build -DUSE_WEB_INTERFACE:BOOL=OFF -DDO_STATS_LOGGING=ON -DENABLE_OPENSSL_SUPPORT=OFF
    - make -C build/ -j8
  cache:
    key: build-without-gui-$CI_MERGE_REQUEST_TARGET_BRANCH_NAME-$CI_MERGE_REQUEST_ID
    paths:
      - build


build-static-analysis:
  stage: build-stage
  tags:
    - cov-analysis
  script:
    - export PATH=/home/hdtn/cov-analysis-linux64-2022.6.1/bin:$PATH
    - export HDTN_SOURCE_ROOT=$PWD
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release ..
    - cov-build --dir idir make -j8
  cache:
    key: build-static-analysis-$CI_MERGE_REQUEST_TARGET_BRANCH_NAME-$CI_MERGE_REQUEST_ID
    paths:
      - build
  artifacts:
    paths:
      - build

# Run unit tests and generate a test report
unit-test:
  stage: test-stage
  tags:
  - docker
  - linux-x86
  image: $CI_REGISTRY/hdtn-v4/hdtn/debian-base
  needs:
    - build-default
  dependencies:
    - build-default
  script:
    - ./build/tests/unit_tests/unit-tests --log_format=JUNIT --log_sink=report.xml
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit: report.xml

# Run unit tests and generate a test report
integrated-test:
  stage: test-stage
  tags:
  - docker
  - linux-x86
  image: $CI_REGISTRY/hdtn-v4/hdtn/debian-base
  needs:
    - build-default
  dependencies:
    - build-default
  script:
    - ./build/tests/integrated_tests/integrated-tests --log_format=JUNIT --log_sink=report.xml
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit: report.xml
      
# Static Analysis Legacy defects  
static-analysis-legacy:
  stage: test-stage
  tags:
  - cov-analysis
  dependencies:
    - build-static-analysis
  needs:
    - build-static-analysis
  script:
    - git fetch
    - export PATH=/home/hdtn/cov-analysis-linux64-2022.6.1/bin:$PATH
    - export files_to_scan=$(git diff --name-only origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME | grep '\.cpp')
    - if [ "$files_to_scan" != "" ]; then cov-run-desktop --dir build/idir --url $COV_BUILD_SERVER --auth-key-file /home/hdtn/ci-auth.key --stream HDTN-master --exit1-if-defects true --ignore-uncapturable-inputs true --present-in-reference true --all --enable-constraint-fpp --enable-fnptr --enable-virtual $files_to_scan; else echo "No files to scan"; fi

# Static Analysis New defects  
static-analysis-new:
  stage: test-stage
  tags:
  - cov-analysis
  dependencies:
    - build-static-analysis
  needs:
    - build-static-analysis
  script:
    - git fetch
    - export PATH=/home/hdtn/cov-analysis-linux64-2022.6.1/bin:$PATH
    - export files_to_scan=$(git diff --name-only origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME | grep '\.cpp')
    - if [ "$files_to_scan" != "" ]; then cov-run-desktop --dir build/idir --url $COV_BUILD_SERVER --auth-key-file /home/hdtn/ci-auth.key --stream HDTN-master --exit1-if-defects true --ignore-uncapturable-inputs true --present-in-reference false --all --enable-constraint-fpp --enable-fnptr --enable-virtual $files_to_scan; else echo "No files to scan"; fi
